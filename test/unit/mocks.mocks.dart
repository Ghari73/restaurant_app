// Mocks generated by Mockito 5.4.5 from annotations
// in restaurant_app/test/unit/mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i8;

import 'package:http/http.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:restaurant_app/data/api/api_service.dart' as _i7;
import 'package:restaurant_app/data/model/post_response.dart' as _i6;
import 'package:restaurant_app/data/model/restaurant_detail_response.dart'
    as _i4;
import 'package:restaurant_app/data/model/restaurant_list_response.dart' as _i3;
import 'package:restaurant_app/data/model/search_response.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeClient_0 extends _i1.SmartFake implements _i2.Client {
  _FakeClient_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeRestaurantListResponse_1 extends _i1.SmartFake
    implements _i3.RestaurantListResponse {
  _FakeRestaurantListResponse_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeRestaurantDetailResponse_2 extends _i1.SmartFake
    implements _i4.RestaurantDetailResponse {
  _FakeRestaurantDetailResponse_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSearchResponse_3 extends _i1.SmartFake
    implements _i5.SearchResponse {
  _FakeSearchResponse_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakePostResponse_4 extends _i1.SmartFake implements _i6.PostResponse {
  _FakePostResponse_4(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [ApiServices].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiServices extends _i1.Mock implements _i7.ApiServices {
  MockApiServices() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Client get client =>
      (super.noSuchMethod(
            Invocation.getter(#client),
            returnValue: _FakeClient_0(this, Invocation.getter(#client)),
          )
          as _i2.Client);

  @override
  _i8.Future<_i3.RestaurantListResponse> getRestaurantList() =>
      (super.noSuchMethod(
            Invocation.method(#getRestaurantList, []),
            returnValue: _i8.Future<_i3.RestaurantListResponse>.value(
              _FakeRestaurantListResponse_1(
                this,
                Invocation.method(#getRestaurantList, []),
              ),
            ),
          )
          as _i8.Future<_i3.RestaurantListResponse>);

  @override
  _i8.Future<_i4.RestaurantDetailResponse> getRestaurantDetail(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#getRestaurantDetail, [id]),
            returnValue: _i8.Future<_i4.RestaurantDetailResponse>.value(
              _FakeRestaurantDetailResponse_2(
                this,
                Invocation.method(#getRestaurantDetail, [id]),
              ),
            ),
          )
          as _i8.Future<_i4.RestaurantDetailResponse>);

  @override
  _i8.Future<_i5.SearchResponse> getSearch(String? query) =>
      (super.noSuchMethod(
            Invocation.method(#getSearch, [query]),
            returnValue: _i8.Future<_i5.SearchResponse>.value(
              _FakeSearchResponse_3(
                this,
                Invocation.method(#getSearch, [query]),
              ),
            ),
          )
          as _i8.Future<_i5.SearchResponse>);

  @override
  _i8.Future<_i6.PostResponse> postReview({
    required String? id,
    required String? name,
    required String? review,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#postReview, [], {
              #id: id,
              #name: name,
              #review: review,
            }),
            returnValue: _i8.Future<_i6.PostResponse>.value(
              _FakePostResponse_4(
                this,
                Invocation.method(#postReview, [], {
                  #id: id,
                  #name: name,
                  #review: review,
                }),
              ),
            ),
          )
          as _i8.Future<_i6.PostResponse>);
}
